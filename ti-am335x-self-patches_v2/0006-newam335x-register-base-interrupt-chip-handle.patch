From ec67c388b520b4c8b8bbac7bde858b18294ea230 Mon Sep 17 00:00:00 2001
From: zoucao <zoucaox@outlook.com>
Date: Fri, 4 Aug 2017 13:52:58 +0800
Subject: [PATCH 06/34] newam335x: register base interrupt chip handle

---
 arch/arm/mach-newam335x/Kconfig     |   1 +
 arch/arm/mach-newam335x/Makefile    |   2 +-
 arch/arm/mach-newam335x/board.c     |  15 ++++-
 arch/arm/mach-newam335x/interrupt.c | 122 ++++++++++++++++++++++++++++++++++++
 arch/arm/mach-newam335x/plat.h      |   6 ++
 5 files changed, 144 insertions(+), 2 deletions(-)
 create mode 100644 arch/arm/mach-newam335x/interrupt.c
 create mode 100644 arch/arm/mach-newam335x/plat.h

diff --git a/arch/arm/mach-newam335x/Kconfig b/arch/arm/mach-newam335x/Kconfig
index 0ad87b5..c238fcc 100644
--- a/arch/arm/mach-newam335x/Kconfig
+++ b/arch/arm/mach-newam335x/Kconfig
@@ -1,2 +1,3 @@
 config ARCH_NEWAM335X
 	def_bool y
+	select GENERIC_IRQ_CHIP
diff --git a/arch/arm/mach-newam335x/Makefile b/arch/arm/mach-newam335x/Makefile
index 32120c7..f7211a2 100644
--- a/arch/arm/mach-newam335x/Makefile
+++ b/arch/arm/mach-newam335x/Makefile
@@ -2,4 +2,4 @@
 #ccflags-$(CONFIG_ARCH_MULTIPLATFORM) := -I$(srctree)/$(src)/include \
 	-I$(srctree)/arch/arm/plat-omap/include
 
-obj-y := board.o
+obj-y := board.o interrupt.o
diff --git a/arch/arm/mach-newam335x/board.c b/arch/arm/mach-newam335x/board.c
index 9fa52b2..c6109fd 100644
--- a/arch/arm/mach-newam335x/board.c
+++ b/arch/arm/mach-newam335x/board.c
@@ -9,12 +9,24 @@
 #include <linux/mmc/host.h>
 #include <linux/usb/musb.h>
 #include <linux/platform_data/gpio-omap.h>
+#include <linux/irq.h>
 
 #include <asm/mach-types.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
 #include <asm/setup.h>
 
+#include "plat.h"
+
+#define OMAP_INTR_CON_BASE 0x48200000
+
+static struct map_desc interrupt_desc __initdata = {
+	.virtual	= 0xf9200000,
+	.pfn		= __phys_to_pfn(0x48200000),
+	.length		= SZ_4K,
+	.type		= MT_DEVICE,
+};
+
 void __init newam335x_reserve(void)
 {
 	early_print("%s\n", __func__);
@@ -23,6 +35,7 @@ void __init newam335x_reserve(void)
 void __init newam335x_map_io(void)
 {
 	early_print("%s\n", __func__);
+	iotable_init(&uart_io_desc, 1);
 }
 
 void __init newam335x_init_early(void)
@@ -60,7 +73,7 @@ void __init newam335x_restart(void)
 	early_print("%s\n", __func__);
 }
 
-MACHINE_START(OMAP3517EVM, "newam335x board")
+MACHINE_START(NEWAM335X, "newam335x board")
 	.atag_offset	= 0x100,
 	.reserve	= newam335x_reserve,
 	.map_io		= newam335x_map_io,
diff --git a/arch/arm/mach-newam335x/interrupt.c b/arch/arm/mach-newam335x/interrupt.c
new file mode 100644
index 0000000..438035d9
--- /dev/null
+++ b/arch/arm/mach-newam335x/interrupt.c
@@ -0,0 +1,122 @@
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/init.h>
+#include <linux/interrupt.h>
+#include <linux/io.h>
+
+#include <asm/exception.h>
+#include <asm/mach/irq.h>
+#include <linux/irqdomain.h>
+#include <linux/of.h>
+#include <linux/of_address.h>
+#include <linux/of_irq.h>
+#include <linux/irq.h>
+#include <asm/setup.h>
+#include "plat.h"
+
+#define INTC_REVISION		0x0000
+#define INTC_SYSCONFIG		0x0010
+#define INTC_SYSSTATUS		0x0014
+#define INTC_SIR		0x0040
+#define INTC_CONTROL		0x0048
+#define INTC_PROTECTION		0x004C
+#define INTC_IDLE		0x0050
+#define INTC_THRESHOLD		0x0068
+#define INTC_MIR0		0x0084
+#define INTC_MIR_CLEAR0		0x0088
+#define INTC_MIR_SET0		0x008c
+#define INTC_PENDING_IRQ0	0x0098
+
+/* Number of IRQ state bits in each MIR register */
+#define IRQ_BITS_PER_REG	32
+static struct gen_irq_bank {
+	void __iomem *base_reg;
+	unsigned int nr_irqs;
+} __attribute__ ((aligned(4))) irq_banks[] = {
+	{
+		/* MPU INTC */
+		.nr_irqs	= 96,
+	},
+};
+static struct irq_domain *domain;
+
+static void intc_bank_write_reg(u32 val, struct gen_irq_bank *bank, u16 reg)
+{
+	__raw_writel(val, bank->base_reg + reg);
+}
+
+static u32 intc_bank_read_reg(struct gen_irq_bank *bank, u16 reg)
+{
+	return __raw_readl(bank->base_reg + reg);
+}
+
+static void omap_ack_irq(struct irq_data *d)
+{
+	intc_bank_write_reg(0x1, &irq_banks[0], INTC_CONTROL);
+}
+static void omap_mask_ack_irq(struct irq_data *d)
+{
+	irq_gc_mask_disable_reg(d);
+	omap_ack_irq(d);
+}
+
+static void __init omap_irq_bank_init_one(struct gen_irq_bank *bank)
+{
+	unsigned long tmp;
+
+	tmp = intc_bank_read_reg(bank, INTC_REVISION) & 0xff;
+	pr_info("IRQ: Found an INTC at 0x%p (revision %ld.%ld) with %d interrupts\n",
+		bank->base_reg, tmp >> 4, tmp & 0xf, bank->nr_irqs);
+
+	tmp = intc_bank_read_reg(bank, INTC_SYSCONFIG);
+	tmp |= 1 << 1;	/* soft reset */
+	intc_bank_write_reg(tmp, bank, INTC_SYSCONFIG);
+
+	while (!(intc_bank_read_reg(bank, INTC_SYSSTATUS) & 0x1))
+		/* Wait for reset to complete */;
+
+	/* Enable autoidle */
+	intc_bank_write_reg(1 << 0, bank, INTC_SYSCONFIG);
+}
+
+static __init void
+gen_alloc_gc(void __iomem *base, unsigned int irq_start, unsigned int num)
+{
+	struct irq_chip_generic *gc;
+	struct irq_chip_type *ct;
+
+	gc = irq_alloc_generic_chip("INTC", 1, irq_start, base,
+					handle_level_irq);
+	ct = gc->chip_types;
+	ct->chip.irq_ack = omap_mask_ack_irq;
+	ct->chip.irq_mask = irq_gc_mask_disable_reg;
+	ct->chip.irq_unmask = irq_gc_unmask_enable_reg;
+	ct->chip.flags |= IRQCHIP_SKIP_SET_WAKE;
+
+	ct->regs.enable = INTC_MIR_CLEAR0;
+	ct->regs.disable = INTC_MIR_SET0;
+	irq_setup_generic_chip(gc, IRQ_MSK(num), IRQ_GC_INIT_MASK_CACHE,
+				IRQ_NOREQUEST | IRQ_NOPROBE, 0);
+}
+
+void __init omap_init_irq(u32 base, int nr_irqs)
+{
+	int j, irq_base;
+	struct gen_irq_bank *bank = irq_banks + 0;
+
+	irq_base = irq_alloc_descs(-1, 0, nr_irqs, 0);
+	if (irq_base < 0) {
+		early_print("Couldn't allocate IRQ numbers\n");
+		irq_base = 0;
+	}
+
+	bank->base_reg = ioremap(base, SZ_4K);
+	bank->nr_irqs = nr_irqs;
+	domain = irq_domain_add_legacy(NULL, nr_irqs, irq_base, 0,
+				   &irq_domain_simple_ops, NULL);
+
+	omap_irq_bank_init_one(bank);
+	for (j = 0; j < bank->nr_irqs; j += 32)
+		gen_alloc_gc(bank->base_reg + j, j + irq_base, 32);
+	early_print("allocate IRQ numbers:%d\n", bank->nr_irqs);
+}
diff --git a/arch/arm/mach-newam335x/plat.h b/arch/arm/mach-newam335x/plat.h
new file mode 100644
index 0000000..dc60731
--- /dev/null
+++ b/arch/arm/mach-newam335x/plat.h
@@ -0,0 +1,6 @@
+#ifndef _PLAT_H_
+#define _PLAT_H_
+void __init omap_init_irq(u32 base, int nr_irqs);
+
+
+#endif
-- 
1.9.1

